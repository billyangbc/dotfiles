- name: Install aptitude
  become: true
  apt:
    name: aptitude
    state: latest
    update_cache: true

#sudo apt-get install apt-transport-https ca-certificates curl
- name: Install required system packages
  become: true
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: latest
    update_cache: true

#curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
- name: Add Docker GPG apt Key
  become: true
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

# Add the repository to Apt sources:
- name: Get distribution release fact
  setup:
    gather_subset:
      - distribution_release

#echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
- name: Add Docker APT repository
  become: true
  apt_repository:
    repo: "deb https://download.docker.com/linux/ubuntu {{ docker_distribution_release }} stable"
    state: present
    update_cache: true
    
#sudo apt-get install docker-ce docker-ce-cli
- name: Install Docker CE
  become: true
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - docker-ce-rootless-extras
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

# sudo -aG $USER docker
- name: users | adding docker users (for use without sudo)
  become: true
  user:
    name: "{{ item }}"
    append: yes
    groups: docker
  with_items: '{{ ansible_user }}'